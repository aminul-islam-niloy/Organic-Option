@model UserOrdersViewModel

<div class="container mt-1">
    <h3 class="text-center mb-2">Order @Model.OrderNo</h3>

    <div class="row">
  
        <div class="col-lg-12 col-md-6">


            <div style="display: flex; justify-content: center;">
                <table style="border-collapse: collapse; width: 100%; text-align: center; border: 1px solid #ddd;">
                   
                    <tbody>
                        <tr>
                            <td style="border: 1px solid #ddd; padding: 8px;"><strong>Order Date:</strong></td>
                            <td style="border: 1px solid #ddd; padding: 8px;">@Model.OrderDate.ToShortDateString()</td>
                        </tr>
                        <tr>
                            <td style="border: 1px solid #ddd; padding: 8px;"><strong>Delivery Charge:</strong></td>
                            <td style="border: 1px solid #ddd; padding: 8px;">@Model.DeliveryCharge ৳</td>
                        </tr>
                        <tr>
                            <td style="border: 1px solid #ddd; padding: 8px;"><strong>Total Price:</strong></td>
                            <td style="border: 1px solid #ddd; padding: 8px;">@Model.TotalPrice ৳</td>
                        </tr>
                        <tr>
                            <td style="border: 1px solid #ddd; padding: 8px;"><strong>Rider Name:</strong></td>
                            <td style="border: 1px solid #ddd; padding: 8px;">@ViewBag.RiderName</td>
                        </tr>
                        <tr>
                            <td style="border: 1px solid #ddd; padding: 8px;"><strong>Rider Phone:</strong></td>
                            <td style="border: 1px solid #ddd; padding: 8px;">@ViewBag.RiderPhone</td>
                        </tr>

                        <tr>
                           
                            <td style="border: 1px solid #ddd; padding: 3px;"><strong>Action</strong></td>

                            

                            <td style="border: 1px solid #ddd; padding: 8px;">
                                @{
                                    if (Model.OrderCondition == OrderCondition.Onlist || Model.OrderCondition == OrderCondition.OrderTaken)
                                    {
                                        <a class="btn btn-secondary"   disabled>Cancel Order</a>
                                    }
                                }

                                @{
                                    @if (Model.OrderCondition == OrderCondition.Delivered)
                                    {

                                        // <div class="btn-group mb-2 mt-2">
                                        //     <form method="post" asp-action="DeleteUserOrder" onsubmit="return confirm('Are you sure you want to delete this item?');">
                                        //         <input type="hidden" name="id" value="@order.OrderNo" />
                                        //         <button type="submit" class="btn btn-danger">Delete Order</button>
                                        //     </form>

                                        // </div>

                                      
                                    <a class="btn btn-warning" style="width:120px; margin-left:5px" href="@Url.Action("CreateReview", "FarmerShop", new { area = "Farmer", farmerShopId = Model.ShopId })">Review  Shop</a>
                                    }
                                }

                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>


            <br />

            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                          
                            <th>Product Name</th>
                            <th>Price</th>
                            <th>Image</th>
                            <th>Quantity</th>
                            <th>Payment Method</th>
                            <th>Shop</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var orderDetail in Model.OrderDetails)
                        {
                            <tr>
                                
                                <td>@orderDetail.ProductName</td>
                                <td>@orderDetail.Price ৳</td>
                                <td>
                                    <img src="~/@orderDetail.ProductImage" alt="Product Image" class="img-thumbnail" style="max-width: 70px; max-height: 70px;" />
                                </td>
                                <td>@orderDetail.Quantity</td>
                                <td>@orderDetail.PaymentMethods</td>
                                <td><a class="btn btn-primary" style="width:200px" href="@Url.Action("Shop", "FarmerShop", new { area = "Farmer", shopId =@orderDetail.ShopId })">Visit Shop</a></td>
                            </tr>

                        }
                    </tbody>
                </table>
            </div>
        </div>
        <br />
        <div class="col-lg-12 col-md-6 text-center justify-content-center">
            <h4 style="margin-bottom:5px; margin-top:5px">Order Status</h4>
            <div class="progress mb-4">
                <div id="progress-bar-@Model.OrderNo" class="progress-bar bg-success" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
            <div class="row text-center">
                <div class="col progress-step">
                    <div id="icon-confirmed-@Model.OrderNo" class="icon-circle bg-light text-dark mb-2">
                        <i class="fas fa-shopping-cart"></i>
                    </div>
                    <p>Onlist</p>
                </div>

                <div class="col progress-step">
                    <div id="icon-quality-@Model.OrderNo" class="icon-circle bg-light text-dark mb-2">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <p>Order Taken</p>
                </div>
                <div class="col progress-step">
                    <div id="icon-dispatched-@Model.OrderNo" class="icon-circle bg-light text-dark mb-2">
                        <i class="fas fa-truck"></i>
                    </div>
                    <p>On Delivary</p>
                </div>
                <div class="col progress-step">
                    <div id="icon-delivered-@Model.OrderNo" class="icon-circle bg-light text-dark mb-2">
                        <i class="fas fa-home"></i>
                    </div>
                    <p>Delivered</p>
                </div>
            </div>

        </div>



    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        var orderCondition = "@Model.OrderCondition"; // Use Razor syntax to get dynamic value from server
        var progressBar = document.getElementById('progress-bar-@Model.OrderNo');

        var steps = {
            "Onlist": { percentage: 12, icon: "icon-confirmed-@Model.OrderNo" },
            "OrderTaken": { percentage: 38, icon: "icon-quality-@Model.OrderNo" },
            
            "OnDelivary": { percentage: 64, icon: "icon-dispatched-@Model.OrderNo" },
            "Delivered": { percentage: 100, icon: "icon-delivered-@Model.OrderNo" }
        };

        if (steps[orderCondition]) {
            progressBar.style.width = steps[orderCondition].percentage + '%';
            progressBar.setAttribute('aria-valuenow', steps[orderCondition].percentage);

            Object.keys(steps).forEach(function (key) {
                var iconElement = document.getElementById(steps[key].icon);
                if (steps[key].percentage <= steps[orderCondition].percentage) {
                    iconElement.classList.remove('bg-light', 'text-dark');
                    iconElement.classList.add('bg-primary', 'text-white');
                } else {
                    iconElement.classList.remove('bg-primary', 'text-white');
                    iconElement.classList.add('bg-light', 'text-dark');
                }
            });
        }
    });
</script>

<style>
    .icon-circle {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto;
    }

    .progress-step {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .progress {
        height: 10px;
    }
   
</style>